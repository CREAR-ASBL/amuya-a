/*
 * Amuyaña is an application that generates Tables of deduction.
 * Visit https://sites.google.com/site/ayarportugal/ for more information about
 * the Tables of deduction and the logic of the contradictory.
 * Visit https://github.com/CREAR-ASBL/amuyana for more information on the 
 * application itself, the Licence, the roadmap, the source code, ...
 */

package ñ;

import amuyaña.Disjunction;

import com.google.gson.JsonSyntaxException;

import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.WindowConstants;

import javax.swing.filechooser.FileNameExtensionFilter;
import tabulator.Tabulator;

public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form Amuyaña_GUI
     */
    GUI() {
        initComponents();
        myInitComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        ñfc_SaveAs = new javax.swing.JFileChooser();
        jDialog2 = new javax.swing.JDialog();
        ñfc_Open = new javax.swing.JFileChooser();
        jDialog3 = new javax.swing.JDialog();
        ñfc_Export = new javax.swing.JFileChooser();
        buttonGroupShow = new javax.swing.ButtonGroup();
        buttonGroupFormat = new javax.swing.ButtonGroup();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        listModelRamToExport = new DefaultListModel();
        ñl_RamToExport = new javax.swing.JList<>();
        jLabel41 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jScrollPane14 = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        general_info = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ñt_NameSys = new javax.swing.JTextField();
        ñt_Author = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ñt_DesSys = new javax.swing.JTextArea();
        ñt_CreationDate = new javax.swing.JLabel();
        ñt_ModifiedDate = new javax.swing.JLabel();
        ñb_EditSys = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        disjunctions = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listModelRam = new DefaultListModel();
        ñl_Ram = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        ñt_NameRam = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        ñt_AbbRam = new javax.swing.JTextField();
        ñb_NewRam = new javax.swing.JButton();
        ñb_CloneRam = new javax.swing.JButton();
        ñb_DeleteRam = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        ñb_FromRam = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listModelRamParents = new DefaultListModel();
        ñl_FromRam = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        ñt_DisjFormulation = new javax.swing.JTextPane();
        ñb_EditRam = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        ñt_NameCon1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        ñt_AbbCon1 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        ñt_NameCon2 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ñt_AbbCon2 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        ñt_NameCon3 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        ñt_AbbCon3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        ñt_NameF1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        ñt_AbbF1 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        ñt_NameF2 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        ñt_AbbF2 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        visualiation = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        ñcmb_LupascoColor = new javax.swing.JComboBox<>();
        jPanel22 = new javax.swing.JPanel();
        ñcmb_LupascoSize = new javax.swing.JComboBox<>();
        ñb_GenerateLupasco = new javax.swing.JButton();
        ñb_ExportLupasco = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        ñrb_Signs = new javax.swing.JRadioButton();
        ñrb_Words = new javax.swing.JRadioButton();
        jLabel27 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        ñrb_Abbreviated = new javax.swing.JRadioButton();
        ñrb_Full = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        ñm_File = new javax.swing.JMenu();
        ñm_New = new javax.swing.JMenuItem();
        ñm_Open = new javax.swing.JMenuItem();
        ñm_Save = new javax.swing.JMenuItem();
        ñm_SaveAs = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        ñm_Exit = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jDialog1.setTitle("Guardar en");
        jDialog1.setAlwaysOnTop(true);
        jDialog1.setSize(new java.awt.Dimension(560, 326));

        ñfc_SaveAs.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        ñfc_SaveAs.setApproveButtonText("Guardar");
        ñfc_SaveAs.setApproveButtonToolTipText("");
        ñfc_SaveAs.setFileFilter(new FileNameExtensionFilter("Amuyaña document (*.ña, *.json)", "ña", "json")

        );
        ñfc_SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñfc_SaveAsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñfc_SaveAs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(ñfc_SaveAs, javax.swing.GroupLayout.PREFERRED_SIZE, 299, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );

        jDialog2.setTitle("Abrir documento Amuyaña");
        jDialog2.setAlwaysOnTop(true);
        jDialog2.setSize(new java.awt.Dimension(560, 326));

        ñfc_Open.setApproveButtonText("Abrir");
        ñfc_Open.setApproveButtonToolTipText("");
        ñfc_Open.setFileFilter(new FileNameExtensionFilter("Amuyaña document (*.ña, *.json)", "ña", "json"));
        ñfc_Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñfc_OpenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñfc_Open, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addComponent(ñfc_Open, javax.swing.GroupLayout.PREFERRED_SIZE, 301, Short.MAX_VALUE)
                .addGap(98, 98, 98))
        );

        jDialog3.setTitle("Exportar Tabla de deducciones");
        jDialog3.setSize(new java.awt.Dimension(650, 450));

        ñfc_Export.setAcceptAllFileFilterUsed(false);
        ñfc_Export.setAccessory(jPanel24);
        ñfc_Export.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        ñfc_Export.setApproveButtonText("Aceptar");
        ñfc_Export.setApproveButtonToolTipText("");
        ñfc_Export.setFileFilter(new FileNameExtensionFilter("Image or Plain latex (*.jpg, *.gif, *.png, *.tex)", "jpg", "gif", "png", "tex"));
        ñfc_Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñfc_ExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ñfc_Export, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ñfc_Export, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        ñl_RamToExport.setModel(listModelRamToExport);
        ñl_RamToExport.setModel(listModelRamToExport);
        ñl_RamToExport.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane9.setViewportView(ñl_RamToExport);

        jLabel41.setText("Seleccione la ramificación");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Amuyaña, generador de Tablas de Deducciones");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mainPanel.setBackground(new java.awt.Color(204, 255, 204));

        general_info.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("Última modificación");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Título");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setText("Fecha de creación");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel7.setText("Autor (email)");

        ñt_NameSys.setEditable(false);
        ñt_NameSys.setEnabled(false);

        ñt_Author.setEditable(false);
        ñt_Author.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel6.setText("Descripción");

        ñt_DesSys.setEditable(false);
        ñt_DesSys.setColumns(20);
        ñt_DesSys.setLineWrap(true);
        ñt_DesSys.setRows(5);
        ñt_DesSys.setToolTipText("<none>");
        ñt_DesSys.setWrapStyleWord(true);
        ñt_DesSys.setEnabled(false);
        jScrollPane1.setViewportView(ñt_DesSys);

        ñb_EditSys.setText("Editar");
        ñb_EditSys.setEnabled(false);
        ñb_EditSys.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ñb_EditSysItemStateChanged(evt);
            }
        });
        ñb_EditSys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_EditSysActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(0, 0, 0));
        jLabel40.setText("Datos generales de la Tabla de deducciones");

        javax.swing.GroupLayout general_infoLayout = new javax.swing.GroupLayout(general_info);
        general_info.setLayout(general_infoLayout);
        general_infoLayout.setHorizontalGroup(
            general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_infoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(general_infoLayout.createSequentialGroup()
                        .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel40)
                            .addGroup(general_infoLayout.createSequentialGroup()
                                .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3))
                                .addGap(23, 23, 23)
                                .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ñt_NameSys, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                    .addComponent(ñt_Author))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ñt_CreationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ñt_ModifiedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ñb_EditSys, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        general_infoLayout.setVerticalGroup(
            general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_infoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel40)
                .addGap(8, 8, 8)
                .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ñb_EditSys, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(general_infoLayout.createSequentialGroup()
                        .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(ñt_NameSys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addComponent(ñt_CreationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ñt_ModifiedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(general_infoLayout.createSequentialGroup()
                                .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(ñt_Author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        disjunctions.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Disyunciones"));

        ñl_Ram.setModel(listModelRam);
        ñl_Ram.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ñl_Ram.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ñl_Ram.setOpaque(false);
        ñl_Ram.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ñl_RamValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ñl_Ram);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel10.setText("Nombre");

        ñt_NameRam.setEditable(false);
        ñt_NameRam.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel11.setText("Abreviación");

        ñt_AbbRam.setEditable(false);
        ñt_AbbRam.setEnabled(false);
        ñt_AbbRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñt_AbbRamActionPerformed(evt);
            }
        });

        ñb_NewRam.setText("Nueva");
        ñb_NewRam.setEnabled(false);
        ñb_NewRam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ñb_NewRamMouseClicked(evt);
            }
        });
        ñb_NewRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_NewRamActionPerformed(evt);
            }
        });

        ñb_CloneRam.setText("Duplicar");
        ñb_CloneRam.setEnabled(false);
        ñb_CloneRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_CloneRamActionPerformed(evt);
            }
        });

        ñb_DeleteRam.setText("Eliminar");
        ñb_DeleteRam.setEnabled(false);
        ñb_DeleteRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_DeleteRamActionPerformed(evt);
            }
        });

        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        ñb_FromRam.setText("Desciende de:");
        ñb_FromRam.setEnabled(false);
        ñb_FromRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_FromRamActionPerformed(evt);
            }
        });

        ñl_FromRam.setModel(listModelRamParents);
        ñl_FromRam.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ñl_FromRam.setOpaque(false);
        jScrollPane3.setViewportView(ñl_FromRam);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(ñb_FromRam)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(ñb_FromRam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Formulación simbólica");

        jScrollPane12.setBackground(new java.awt.Color(255, 51, 51));
        jScrollPane12.setBorder(null);
        jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane12.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane12.setOpaque(false);

        ñt_DisjFormulation.setEditable(false);
        ñt_DisjFormulation.setBackground(new java.awt.Color(255, 102, 102));
        ñt_DisjFormulation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ñt_DisjFormulation.setContentType("text/html"); // NOI18N
        ñt_DisjFormulation.setOpaque(false);
        jScrollPane12.setViewportView(ñt_DisjFormulation);

        ñb_EditRam.setText("Editar");
        ñb_EditRam.setEnabled(false);
        ñb_EditRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_EditRamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(ñb_NewRam))
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ñb_DeleteRam, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ñb_CloneRam, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ñb_EditRam)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(35, 35, 35)
                                .addComponent(ñt_NameRam, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ñt_AbbRam, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(ñb_NewRam)
                        .addGap(18, 18, 18)
                        .addComponent(ñb_CloneRam)
                        .addGap(18, 18, 18)
                        .addComponent(ñb_DeleteRam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ñb_EditRam, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ñt_NameRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ñt_AbbRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Conjunción contradiccional positiva"));
        jPanel8.setPreferredSize(new java.awt.Dimension(600, 110));

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel12.setText("Nombre");

        ñt_NameCon1.setEditable(false);
        ñt_NameCon1.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel13.setText("Abreviación");

        ñt_AbbCon1.setEditable(false);
        ñt_AbbCon1.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(36, 36, 36)
                        .addComponent(ñt_NameCon1))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ñt_AbbCon1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 304, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ñt_NameCon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(ñt_AbbCon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Conjunción contradiccional negativa"));
        jPanel9.setPreferredSize(new java.awt.Dimension(600, 110));

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel15.setText("Nombre");

        ñt_NameCon2.setEditable(false);
        ñt_NameCon2.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel16.setText("Abreviación");

        ñt_AbbCon2.setEditable(false);
        ñt_AbbCon2.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(ñt_NameCon2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ñt_AbbCon2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(ñt_NameCon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(ñt_AbbCon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Conjunción contradictorial o simétrica"));
        jPanel10.setPreferredSize(new java.awt.Dimension(600, 110));

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel18.setText("Nombre");

        ñt_NameCon3.setEditable(false);
        ñt_NameCon3.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel19.setText("Abreviación");

        ñt_AbbCon3.setEditable(false);
        ñt_AbbCon3.setEnabled(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(36, 36, 36)
                        .addComponent(ñt_NameCon3))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ñt_AbbCon3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(ñt_NameCon3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(ñt_AbbCon3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Elemento"));

        jLabel23.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel23.setText("Nombre");

        ñt_NameF1.setEditable(false);
        ñt_NameF1.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel24.setText("Abreviación");

        ñt_AbbF1.setEditable(false);
        ñt_AbbF1.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ñt_NameF1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ñt_AbbF1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 242, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(ñt_NameF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(ñt_AbbF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Anti-Elemento"));

        jLabel29.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel29.setText("Nombre");

        ñt_NameF2.setEditable(false);
        ñt_NameF2.setEnabled(false);

        jLabel30.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel30.setText("Abreviación");

        ñt_AbbF2.setEditable(false);
        ñt_AbbF2.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ñt_NameF2)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(ñt_AbbF2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 241, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(ñt_NameF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(ñt_AbbF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Definición de las ramificaciones de la Tabla de deducciones");

        javax.swing.GroupLayout disjunctionsLayout = new javax.swing.GroupLayout(disjunctions);
        disjunctions.setLayout(disjunctionsLayout);
        disjunctionsLayout.setHorizontalGroup(
            disjunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(disjunctionsLayout.createSequentialGroup()
                .addGroup(disjunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(disjunctionsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(disjunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(disjunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                                .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        disjunctionsLayout.setVerticalGroup(
            disjunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(disjunctionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        visualiation.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Estilo Chakana"));
        jPanel19.setPreferredSize(new java.awt.Dimension(160, 150));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ñ/resources/chakanaIcon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Estilo Amuyaña"));
        jPanel20.setPreferredSize(new java.awt.Dimension(160, 150));

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ñ/resources/amuyañaStyleIcon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jLabel26)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        jLabel9.setText("Estilos aún no implementados:");

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Estilo Sierpinski"));
        jPanel18.setPreferredSize(new java.awt.Dimension(160, 150));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ñ/resources/sierpinskiIcon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Visualizaciones de la Tabla de deducciones");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Estilo Lupasco"));

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder("Tema"));

        ñcmb_LupascoColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Negro y Blanco", "Gris oscuro", "Gris claro", "Violeta", "Azul", "Cian", "Verde", "Amarillo", "Naranja", "Rojo" }));
        ñcmb_LupascoColor.setEnabled(false);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñcmb_LupascoColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñcmb_LupascoColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder("Tamaño"));

        ñcmb_LupascoSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));
        ñcmb_LupascoSize.setSelectedIndex(1);
        ñcmb_LupascoSize.setEnabled(false);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñcmb_LupascoSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñcmb_LupascoSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        ñb_GenerateLupasco.setText("Mostrar");
        ñb_GenerateLupasco.setEnabled(false);
        ñb_GenerateLupasco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_GenerateLupascoActionPerformed(evt);
            }
        });

        ñb_ExportLupasco.setText("Exportar");
        ñb_ExportLupasco.setEnabled(false);
        ñb_ExportLupasco.setPreferredSize(new java.awt.Dimension(94, 50));
        ñb_ExportLupasco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_ExportLupascoActionPerformed(evt);
            }
        });

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Escritura"));

        ñrb_Signs.setText("Operacional");
        ñrb_Signs.setEnabled(false);

        ñrb_Words.setText("Proposicional");
        ñrb_Words.setEnabled(false);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñrb_Signs)
            .addComponent(ñrb_Words)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(ñrb_Signs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ñrb_Words))
        );

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ñ/resources/lupascoIcon.png"))); // NOI18N

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Formato"));

        ñrb_Abbreviated.setText("Abreviado");
        ñrb_Abbreviated.setEnabled(false);

        ñrb_Full.setText("Completo");
        ñrb_Full.setEnabled(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñrb_Full)
            .addComponent(ñrb_Abbreviated)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addComponent(ñrb_Full)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ñrb_Abbreviated))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ñb_GenerateLupasco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ñb_ExportLupasco, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addGap(190, 190, 190))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(ñb_GenerateLupasco)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(ñb_ExportLupasco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel27))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout visualiationLayout = new javax.swing.GroupLayout(visualiation);
        visualiation.setLayout(visualiationLayout);
        visualiationLayout.setHorizontalGroup(
            visualiationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visualiationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(visualiationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addGroup(visualiationLayout.createSequentialGroup()
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        visualiationLayout.setVerticalGroup(
            visualiationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visualiationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(visualiationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setOpaque(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel5.setOpaque(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 115, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(visualiation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(general_info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(disjunctions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(general_info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disjunctions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visualiation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane14.setViewportView(mainPanel);

        ñm_File.setText("Archivo");
        ñm_File.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                ñm_FileMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        ñm_File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_FileActionPerformed(evt);
            }
        });

        ñm_New.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        ñm_New.setText("Nueva Tabla de Deducciones");
        ñm_New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_NewActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_New);

        ñm_Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        ñm_Open.setText("Abrir");
        ñm_Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_OpenActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_Open);

        ñm_Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        ñm_Save.setText("Guardar");
        ñm_Save.setEnabled(false);
        ñm_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_SaveActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_Save);

        ñm_SaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        ñm_SaveAs.setText("Guardar Como");
        ñm_SaveAs.setEnabled(false);
        ñm_SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_SaveAsActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_SaveAs);
        ñm_File.add(jSeparator1);

        ñm_Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        ñm_Exit.setText("Salir");
        ñm_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_ExitActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_Exit);

        jMenuBar1.add(ñm_File);

        jMenu1.setText("Ayuda");

        jMenuItem2.setText("Acerca de");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 1015, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
        );

        jScrollPane14.getVerticalScrollBar().setUnitIncrement(35);

        setSize(new java.awt.Dimension(1025, 652));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ñm_SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_SaveAsActionPerformed
        // if isOpen -> saveAs, if !isOpen -> do nothing
        if (Ñ.isOpen()){
            jDialog1.setVisible(true);
        } else if (!(Ñ.isOpen())) {
            // do nothing
        }
    }//GEN-LAST:event_ñm_SaveAsActionPerformed

    private void ñm_NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_NewActionPerformed
        // Si ya hay un documento abierto
        if (Ñ.isOpen()) {
            if (Ñ.isModified()){
                int answer = JOptionPane.showConfirmDialog(rootPane,
                        "¿Quiere guardar los cambios antes de abrir "
                                + "otro documento?",
                    "¿Guardar los cambios?", JOptionPane.YES_NO_CANCEL_OPTION);

                switch (answer) {
                    // if Cancel, jump back to the main frame
                    case 2:
                        return;
                    // if No, continue to read after switch
                    case 1:
                        break;
                    // if Yes, save Jtexts and automatically click save
                    // (if the file was not saved yet, it will autoclick saveAs)
                    case 0: {
                        if ("Guardar".equals(ñb_EditSys.getText())) 
                            ñb_EditSys.doClick();
                        if ("Guardar".equals(ñb_EditRam.getText())) 
                            ñb_EditRam.doClick();
                        
                        if (Ñ.getFile()!=null) {
                            ñm_Save.doClick();
                            break;
                        }
                        else if (Ñ.getFile() == null ){
                            ñm_SaveAs.doClick();
                            return;
                        }
                    }
                }
            }
            
            // As it's a new file, set its path to null
            Ñ.setFile(null);
            
            // Counter of Disjunctions, Conjunctions and Phenomena
            Ñ.amuyaña.resetCounter();
            
            // Erase reference to object table = reset amuyaña
            Ñ.amuyaña = null;
            
            // very brief setOpen(false) since in a few lines we setOpen(true)
            Ñ.setOpen(false);
            
            cleanFields();
            
        }
        
        Ñ.newAmuyaña();
        Ñ.setOpen(true);
        Ñ.setModified(true);
        
        enableOptions();
        
        setupFields();
        
       // change the window title
        setTitle("Documento sin guardar - "
        + "Amuyaña, generador de Tablas de Deducciones");
        
    }//GEN-LAST:event_ñm_NewActionPerformed

    private void ñm_OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_OpenActionPerformed

        // si hubieron cambios (si se apretó algún botón "editar") o si hay un 
        // nuevo documento sin guardar, preguntar si se quiere guardar antes de
        // abrir
        if (Ñ.isModified() || (Ñ.getFile()==null && Ñ.isOpen())){
            int answer = JOptionPane.showConfirmDialog(rootPane, "¿Quiere guardar los"
                    + " cambios antes de abrir otro documento?",
                    "¿Guardar los cambios?", JOptionPane.YES_NO_CANCEL_OPTION);
            switch (answer) {
                // Cancel: do nothing
                case 2:
                    break;
                // No: open dialog (and then memory will reset)
                case 1: jDialog2.setVisible(true);
                    break;
                // Yes: save, then open dialog.
                case 0: {
                    if (Ñ.getFile()!=null) {
                        ñm_Save.doClick();
                        jDialog2.setVisible(true);
                    }
                    else if (Ñ.getFile() == null ){
                        ñm_SaveAs.doClick();
                    }
                    break;
                }
            }
        } else if (!(Ñ.isModified()) || !(Ñ.isOpen())){
            jDialog2.setVisible(true);
            return;
        }
        
        if ("Guardar".equals(ñb_EditSys.getText())) ñb_EditSys.doClick();
        if ("Guardar".equals(ñb_EditRam.getText())) ñb_EditRam.doClick();
        
    }//GEN-LAST:event_ñm_OpenActionPerformed

    private void ñm_FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_FileActionPerformed

    }//GEN-LAST:event_ñm_FileActionPerformed

    private void ñm_FileMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_ñm_FileMenuSelected
        
    }//GEN-LAST:event_ñm_FileMenuSelected

    private void ñm_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_SaveActionPerformed
        // Si ya hay documento abierto guardar
        if ((Ñ.isOpen())){
            
            // Hacer que todos los botones estén en editar, es decir guardar
            // los datos en la memoria
            if ("Guardar".equals(ñb_EditSys.getText())) ñb_EditSys.doClick();
            if ("Guardar".equals(ñb_EditRam.getText())) ñb_EditRam.doClick();
            
            // Si ya hay una dirección y nombre de archivo, guardar
            if ((Ñ.getFile()!=null)) {
                try {
                    Ñ.saveAmuyaña();
                    Ñ.setModified(false);
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            // Si no hay una dirección, es decir es un documento sin haberse 
            // guardado ni haberse abierto, hacer saveAS
            else if ((Ñ.getFile()==null)) {
                ñm_SaveAs.doClick();
            }
        } else if (!(Ñ.isOpen())){
            // do nothing
        }
    }//GEN-LAST:event_ñm_SaveActionPerformed

    private void ñm_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_ExitActionPerformed
        // antes de salir verificar si hubieron cambios y preguntar si guardar
        if (Ñ.isModified()){
            int answer = JOptionPane.showConfirmDialog(rootPane,
                    "¿Quiere guardar los cambios antes de abrir "
                            + "otro documento?",
                "¿Guardar los cambios?", JOptionPane.YES_NO_CANCEL_OPTION);

            switch (answer) {
                case 2:
                    return; // jump back to the main frame
                case 1:
                    System.exit(0);
                case 0: {
                    if ("Guardar".equals(ñb_EditSys.getText())) 
                        ñb_EditSys.doClick();
                    if ("Guardar".equals(ñb_EditRam.getText())) 
                        ñb_EditRam.doClick();

                    if (Ñ.getFile()!=null) {
                        ñm_Save.doClick();
                        break;
                    }
                    else if (Ñ.getFile() == null ){
                        ñm_SaveAs.doClick();
                        return;
                    }
                }
            }
        } else if (!Ñ.isModified()){
        System.exit(0);
        }
        
    }//GEN-LAST:event_ñm_ExitActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        ñm_New.doClick();
        
    }//GEN-LAST:event_formWindowOpened

    private void ñfc_SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñfc_SaveAsActionPerformed
        JFileChooser selectorArchivo = (JFileChooser) evt.getSource();
        String command = evt.getActionCommand();
        
        // Si escribe algo y hace click en Guardar
        if (command.equals(JFileChooser.APPROVE_SELECTION)){
            File archivoSeleccionado = selectorArchivo.getSelectedFile();
            try {
                // Si lo que escribe termina en .ña o .json, guardar con ese nombre. Sino, añadir .ña y guardaar
                if (archivoSeleccionado.getName().endsWith(".ña") || archivoSeleccionado.getName().endsWith(".json")){
                    Ñ.setFile(archivoSeleccionado.getAbsolutePath());
                    Ñ.saveAmuyaña();
                    jDialog1.dispose();
                    Ñ.setModified(false);
                } else if (!(archivoSeleccionado.getName().endsWith(".ña")) ||
                        !(archivoSeleccionado.getName().endsWith(".json"))){
                    Ñ.setFile(archivoSeleccionado.getAbsolutePath()+".ña");
                    Ñ.saveAmuyaña();
                    jDialog1.dispose();
                    Ñ.setModified(false);
                }
                
                // If there was no an exception, set the window title to the
                // new name
                setTitle(archivoSeleccionado.getAbsolutePath() + 
                        " - Amuyaña, generador de Tablas de Deducciones");
                
            } catch (IOException ex) {
               //
            }

        } else if (command.equals(JFileChooser.CANCEL_SELECTION)) {
            jDialog1.dispose();
        }
    }//GEN-LAST:event_ñfc_SaveAsActionPerformed

    private void ñfc_OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñfc_OpenActionPerformed
        JFileChooser selectorArchivo = (JFileChooser) evt.getSource();
        String command = evt.getActionCommand();
        
        // Si click en "abrir", memorizar el nombre indicado en Ñ.file
        if (command.equals(JFileChooser.APPROVE_SELECTION)){
            File archivoSeleccionado = selectorArchivo.getSelectedFile();
            Ñ.setFile(archivoSeleccionado.getAbsolutePath());
            // intentar abrir el archivo .ña o .json, cerrar la ventana 
            try {
                Ñ.openAmuyaña();
                ñm_Save.setEnabled(true);
                ñm_SaveAs.setEnabled(true);
                Ñ.setModified(false);
                jDialog2.dispose();
            } catch (FileNotFoundException ex) { 
                messageToUser("El archivo no existe.");
            } catch (JsonSyntaxException j){
                messageToUser("No se puede abrir el archivo seleccionado.");
            }
            
            // if there is no document open, enable all jTexts
            if (!(Ñ.isOpen())){
                Ñ.setOpen(true);
                Ñ.setModified(false);
                enableOptions();
                setupFields();
            } else if (Ñ.isOpen()){
                cleanFields();
                setupFields();
            }
            // Establece el título de la ventana con el nombre del archivo
            super.setTitle(Ñ.nameInTitle()+"Amuyaña, generador de Tablas de Deducciones");
            
        } else if (command.equals(JFileChooser.CANCEL_SELECTION)) {
            jDialog2.dispose();
            return;
        }
    }//GEN-LAST:event_ñfc_OpenActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // si se ha editado enviar a ñm_Exit
        if (Ñ.isModified()) ñm_Exit.doClick();
        else if (!Ñ.isModified()) System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        GUI_Acerca ñw_Acerca = new GUI_Acerca();
            ñw_Acerca.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void ñb_EditRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_EditRamActionPerformed
        // Si ya hay un documento "abierto"
        int tempSelection;
                
        if (Ñ.isOpen()) {
            // Si el botón está en Editar
            if ("Editar".equals(ñb_EditRam.getText())){
                //Si la selección está vacía, por favor seleccionar un elemento
                if(ñl_Ram.isSelectionEmpty()){
                    messageToUser("Seleccione una disyunción.");
                } else if (!(ñl_Ram.isSelectionEmpty())){
                    
                    ñb_EditRam.setText("Guardar");
                    
                    ñl_Ram.setEnabled(false);
                    ñl_FromRam.setFocusable(true);

                    ñt_NameRam.setEditable(true);
                    ñt_AbbRam.setEditable(true);

                    ñt_NameCon1.setEditable(true);
                    ñt_NameCon2.setEditable(true);
                    ñt_NameCon3.setEditable(true);

                    ñt_AbbCon1.setEditable(true);
                    ñt_AbbCon2.setEditable(true);
                    ñt_AbbCon3.setEditable(true);

//                    ñt_DesCon1.setEditable(true);
//                    ñt_DesCon2.setEditable(true);
//                    ñt_DesCon3.setEditable(true);

                    ñb_DeleteRam.setEnabled(false);
                    ñb_CloneRam.setEnabled(false);
                    ñb_FromRam.setEnabled(true);
                    ñb_NewRam.setEnabled(false);
                    
                    // Los elementos y sus valores
                    ñt_NameF1.setEditable(true);
                    ñt_NameF2.setEditable(true);

                    ñt_AbbF1.setEditable(true);
                    ñt_AbbF2.setEditable(true);

//                    ñt_DesF1.setEditable(true);
//                    ñt_DesF2.setEditable(true);
                    
//                    ñs_PF1A.setEnabled(true);
//                    ñs_PF1P.setEnabled(true);
//                    ñs_PF1T.setEnabled(true);
//                    ñs_PF2A.setEnabled(true);
//                    ñs_PF2P.setEnabled(true);
//                    ñs_PF2T.setEnabled(true);
//                    ñs_QF1A.setEnabled(true);
//                    ñs_QF1P.setEnabled(true);
//                    ñs_QF1T.setEnabled(true);
//                    ñs_QF2A.setEnabled(true);
//                    ñs_QF2P.setEnabled(true);
//                    ñs_QF2T.setEnabled(true);

                    Ñ.setModified(true);
                }
            } else if ("Guardar".equals(ñb_EditRam.getText())) {
                ñb_EditRam.setText("Editar");
                tempSelection = ñl_Ram.getSelectedIndex();
                
                ñl_Ram.setEnabled(true);

                ñl_FromRam.setFocusable(false);

                ñt_NameRam.setEditable(false);
                ñt_AbbRam.setEditable(false);

                ñt_NameCon1.setEditable(false);
                ñt_NameCon2.setEditable(false);
                ñt_NameCon3.setEditable(false);

                ñt_AbbCon1.setEditable(false);
                ñt_AbbCon2.setEditable(false);
                ñt_AbbCon3.setEditable(false);

//                ñt_DesCon1.setEditable(false);
//                ñt_DesCon2.setEditable(false);
//                ñt_DesCon3.setEditable(false);

//                ñb_CloneRam.setEnabled(false);
//                ñb_DeleteRam.setEnabled(false);
                ñb_FromRam.setEnabled(false);
                ñb_NewRam.setEnabled(true);

                // Si la selección está vacia no hacer nada.
                // Si la selección no está vacia, guardar los datos de la
                // disyunción seleccionada. Gracias
//                if (ñl_Ram.isSelectionEmpty()){
//                    //
//                }
//                else if (!(ñl_Ram.isSelectionEmpty())) {
                    Disjunction disjunction = Ñ.amuyaña.getDisjunctions().
                            get(ñl_Ram.getSelectedIndex());
                    
                    Ñ.amuyaña.setDisjName(disjunction,ñt_NameRam.getText());

                    Ñ.amuyaña.setDisjAbb(disjunction,ñt_AbbRam.getText());

                    //
                    Ñ.amuyaña.setCon1Name(disjunction,ñt_NameCon1.getText());

                    Ñ.amuyaña.setCon2Name(disjunction,ñt_NameCon2.getText());

                    Ñ.amuyaña.setCon3Name(disjunction,ñt_NameCon3.getText());

                    //
                    Ñ.amuyaña.setCon1Abb(disjunction,ñt_AbbCon1.getText());

                    Ñ.amuyaña.setCon2Abb(disjunction,ñt_AbbCon2.getText());

                    Ñ.amuyaña.setCon3Abb(disjunction,ñt_AbbCon3.getText());

                    //
//                    Ñ.amuyaña.setCon1Des(disjunction,ñt_DesCon1.getText());
//
//                    Ñ.amuyaña.setCon2Des(disjunction,ñt_DesCon2.getText());
//
//                    Ñ.amuyaña.setCon3Des(disjunction,ñt_DesCon3.getText());

                    // LOS ELEMENTOS Y SUS VALORES
                    ñt_NameF1.setEditable(false);
                    ñt_NameF2.setEditable(false);

                    ñt_AbbF1.setEditable(false);
                    ñt_AbbF2.setEditable(false);

//                    ñt_DesF1.setEditable(false);
//                    ñt_DesF2.setEditable(false);

//                    ñs_PF1A.setEnabled(false);
//                    ñs_PF1P.setEnabled(false);
//                    ñs_PF1T.setEnabled(false);
//                    ñs_PF2A.setEnabled(false);
//                    ñs_PF2P.setEnabled(false);
//                    ñs_PF2T.setEnabled(false);
//                    ñs_QF1A.setEnabled(false);
//                    ñs_QF1P.setEnabled(false);
//                    ñs_QF1T.setEnabled(false);
//                    ñs_QF2A.setEnabled(false);
//                    ñs_QF2P.setEnabled(false);
//                    ñs_QF2T.setEnabled(false);

                    //Guardar los datos escritos en las casillas jTextArea
                    

                    Ñ.amuyaña.setF1Name(disjunction, ñt_NameF1.getText());
                    Ñ.amuyaña.setF2Name(disjunction, ñt_NameF2.getText());

                    Ñ.amuyaña.setF1Abb(disjunction, ñt_AbbF1.getText());
                    Ñ.amuyaña.setF2Abb(disjunction, ñt_AbbF2.getText());

//                    Ñ.amuyaña.setF1Des(disjunction, ñt_DesF1.getText());
//                    Ñ.amuyaña.setF2Des(disjunction, ñt_DesF2.getText());

                    double val;

//                    // Position
//                    val=ñs_PF1A.getValue();
//                    Ñ.amuyaña.setF1PA(disjunction, val/100);
//                    val=ñs_PF1P.getValue();
//                    Ñ.amuyaña.setF1PP(disjunction, val/100);
//                    val=ñs_PF1T.getValue();
//                    Ñ.amuyaña.setF1PT(disjunction, val/100);
//                    val=ñs_PF2A.getValue();
//                    Ñ.amuyaña.setF2PA(disjunction, val/100);
//                    val=ñs_PF2P.getValue();
//                    Ñ.amuyaña.setF2PP(disjunction, val/100);
//                    val=ñs_PF2T.getValue();
//                    Ñ.amuyaña.setF2PT(disjunction, val/100);
//
//                    // Magnitud/quantum
//                    val=ñs_QF1A.getValue();
//                    Ñ.amuyaña.setF1QA(disjunction, val/100);
//                    val=ñs_QF1P.getValue();
//                    Ñ.amuyaña.setF1QP(disjunction, val/100);
//                    val=ñs_QF1T.getValue();
//                    Ñ.amuyaña.setF1QT(disjunction, val/100);
//                    val=ñs_QF2A.getValue();
//                    Ñ.amuyaña.setF2QA(disjunction, val/100);
//                    val=ñs_QF2P.getValue();
//                    Ñ.amuyaña.setF2QP(disjunction, val/100);
//                    val=ñs_QF2T.getValue();
//                    Ñ.amuyaña.setF2QT(disjunction, val/100);
                    
                    reloadRamList();
                    ñl_Ram.setSelectedIndex(tempSelection);


            }
        } else if (!(Ñ.isOpen())) {
            noDocumentMessage();
        }
    }//GEN-LAST:event_ñb_EditRamActionPerformed

    private void ñb_FromRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_FromRamActionPerformed
        if (ñl_Ram.isSelectionEmpty()){
            //Do nothing
        } else if (!ñl_Ram.isSelectionEmpty()) {
            GUI_Subcons ñw_RamParents = new GUI_Subcons();
            ñw_RamParents.setVisible(true);
            
            GUI_Subcons.listModelAllSubconjunctions.clear();
            
            for(String s : Ñ.getAllSubconjunctionsNames()){
                GUI_Subcons.listModelAllSubconjunctions.addElement(s);
            }

            // Preselecciona en la lista ñl_FromRam las conjunciones que son
            // padres de la disyunción seleccionada en ñl_Ram. Ahora se espera
            // alguna acción de la ventana generada por GUI_Cons.java
            GUI_Subcons.ñl_AllSubconjunctions.setSelectedIndices(
                    Ñ.getParentsIndices(Ñ.amuyaña.getDisjunctions().
                    get(ñl_Ram.getSelectedIndex())));
        }
    }//GEN-LAST:event_ñb_FromRamActionPerformed

    private void ñb_DeleteRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_DeleteRamActionPerformed
        if(ñl_Ram.isSelectionEmpty()){
            // Do nothing or there will be an exception
        } else if (!(ñl_Ram.isSelectionEmpty())){
            // Si seleccionó el root, informar que no se lo puede borrar.
            if (ñl_Ram.getSelectedIndex() <0){
            } else if (ñl_Ram.getSelectedIndex()>0){
                
                // Verificar que ninguna de las subconjunctiones de d es padre
                // de alguna otra disyunción.
                if (Ñ.isParent(ñl_Ram.getSelectedIndex())){
                    messageToUser("<html>Alguna disyunción del sistema "
                                + " desciende de "
                                + "una o más<br>conjunciones contradiccionales "
                                + "de la disyunción que intenta eliminar. <br>"
                                + "Anule la relación de descendencia antes de "
                                + "eliminar la disyunción.</html>");
                // If the selected disjunction is not parent of any other 
                // disjunction, then it can be deleted.
                } else if (!Ñ.isParent(ñl_Ram.getSelectedIndex())){
//                    if ("Guardar".equals(ñb_EditRam.getText())){ñb_EditRam.doClick();}
                    //Borrar texto de las casillas

                    ñt_NameF1.setText("");
                    ñt_NameF2.setText("");

                    ñt_AbbF1.setText("");
                    ñt_AbbF2.setText("");

//                    ñt_DesF1.setText("");
//                    ñt_DesF2.setText("");
                    System.out.println("ñ.GUI.ñb_DeleteRamActionPerformed()");
                    System.out.println(ñl_Ram.getSelectedIndex());
                    System.out.println("ñ.GUI.ñb_DeleteRamActionPerformed()");
                    Ñ.amuyaña.deleteRamification(Ñ.amuyaña.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()));
                
//                    listModelRam.remove(ñl_Ram.getSelectedIndex());

                    //Borra los textos de las demás casillas y de la lista de padres
                    ñt_NameRam.setText("");
                    ñt_AbbRam.setText("");

                    ñt_NameCon1.setText("");
                    ñt_NameCon2.setText("");
                    ñt_NameCon3.setText("");

                    ñt_AbbCon1.setText("");
                    ñt_AbbCon2.setText("");
                    ñt_AbbCon3.setText("");

//                    ñt_DesCon1.setText("");
//                    ñt_DesCon2.setText("");
//                    ñt_DesCon3.setText("");

                    listModelRamParents.clear();

                    reloadRamList();
                }
                
            }
        }
    }//GEN-LAST:event_ñb_DeleteRamActionPerformed

    private void ñb_CloneRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_CloneRamActionPerformed

        if(ñl_Ram.isSelectionEmpty()){
            // Do nothing or there will be an exception
        } else if (!(ñl_Ram.isSelectionEmpty())){
            Ñ.amuyaña.cloneRamification(Ñ.amuyaña.getDisjunctions().get(ñl_Ram.getSelectedIndex()));
            reloadRamList();
//            listModelRam.addElement(Ñ.amuyaña.getDisjName(
//                Ñ.amuyaña.cloneRamification(Ñ.amuyaña.getDisjunctions().get(ñl_Ram.getSelectedIndex()))
//            ));
            //            Ñ.table.cloneRamification(Ñ.table.getDisjunctions().get(ñl_Ram.getSelectedIndex()));

        }

    }//GEN-LAST:event_ñb_CloneRamActionPerformed

    private void ñb_NewRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_NewRamActionPerformed
        if (!(Ñ.isOpen())){
            // if !Ñ.isOpen this button is not enabled anyways
        } else if (Ñ.isOpen()){
            
            
            Disjunction newDisjunction = Ñ.amuyaña.createRamification();
            
//            listModelRam.addElement(Ñ.amuyaña.getDisjName(newDisjunction));
            reloadRamList();

        }
    }//GEN-LAST:event_ñb_NewRamActionPerformed

    private void ñb_NewRamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ñb_NewRamMouseClicked

    }//GEN-LAST:event_ñb_NewRamMouseClicked

    private void ñt_AbbRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñt_AbbRamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ñt_AbbRamActionPerformed

    private void ñl_RamValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ñl_RamValueChanged
        if (ñl_Ram.getValueIsAdjusting()){
            // do nothing
        } else if (!(ñl_Ram.getValueIsAdjusting())) {
            // if index is -1, ignore! this function has been activated
            // by another one... else, do the magic!
            ñb_DeleteRam.setEnabled(false);
            ñb_CloneRam.setEnabled(false);
            ñb_FromRam.setEnabled(false);
            listModelRamParents.clear();
            
            if (ñl_Ram.getSelectedIndex()==-1) {
                //
            } else if (ñl_Ram.getSelectedIndex() >= 0) {

                Disjunction d = Ñ.amuyaña.getDisjunctions().
                get(ñl_Ram.getSelectedIndex());

                ñt_NameRam.setText(Ñ.amuyaña.getDisjName(d));
                ñt_AbbRam.setText(Ñ.amuyaña.getDisjAbb(d));

                // Names of three conjunctions of the disjunction d
                ñt_NameCon1.setText(Ñ.amuyaña.getCon1Name(d));
                ñt_NameCon2.setText(Ñ.amuyaña.getCon2Name(d));
                ñt_NameCon3.setText(Ñ.amuyaña.getCon3Name(d));

                // Abbreviations of three conjunctions of the disjunction d
                ñt_AbbCon1.setText(Ñ.amuyaña.getCon1Abb(d));
                ñt_AbbCon2.setText(Ñ.amuyaña.getCon2Abb(d));
                ñt_AbbCon3.setText(Ñ.amuyaña.getCon3Abb(d));

                // Descriptions of three conjunctions of the disjunction d
//                ñt_DesCon1.setText(Ñ.amuyaña.getCon1Des(d));
//                ñt_DesCon2.setText(Ñ.amuyaña.getCon2Des(d));
//                ñt_DesCon3.setText(Ñ.amuyaña.getCon3Des(d));
                
                //DATOS DE LOS FENÓMENOS
                ñt_NameF1.setText(Ñ.amuyaña.getF1Name(d));
                ñt_NameF2.setText(Ñ.amuyaña.getF2Name(d));

                ñt_AbbF1.setText(Ñ.amuyaña.getF1Abb(d));
                ñt_AbbF2.setText(Ñ.amuyaña.getF2Abb(d));

//                ñt_DesF1.setText(Ñ.amuyaña.getF1Des(d));
//                ñt_DesF2.setText(Ñ.amuyaña.getF2Des(d));
                
                // LOS SLIDERS
//                int val;
//                
//                val=(int) (Ñ.amuyaña.getF1PA(d) *100);
//                ñs_PF1A.setValue(val);
//                val=(int) (Ñ.amuyaña.getF1PP(d) *100);
//                ñs_PF1P.setValue(val);
//                val=(int) (Ñ.amuyaña.getF1PT(d) *100);
//                ñs_PF1T.setValue(val);
//                val=(int) (Ñ.amuyaña.getF2PA(d) *100);
//                ñs_PF2A.setValue(val);
//                val=(int) (Ñ.amuyaña.getF2PP(d) *100);
//                ñs_PF2P.setValue(val);
//                val=(int) (Ñ.amuyaña.getF2PT(d) *100);
//                ñs_PF2T.setValue(val);
//                
//                val=(int) (Ñ.amuyaña.getF1QA(d) *100);
//                ñs_QF1A.setValue(val);
//                val=(int) (Ñ.amuyaña.getF1QP(d) *100);
//                ñs_QF1P.setValue(val);
//                val=(int) (Ñ.amuyaña.getF1QT(d) *100);
//                ñs_QF1T.setValue(val);
//                val=(int) (Ñ.amuyaña.getF2QA(d) *100);
//                ñs_QF2A.setValue(val);
//                val=(int) (Ñ.amuyaña.getF2QP(d) *100);
//                ñs_QF2P.setValue(val);
//                val=(int) (Ñ.amuyaña.getF2QT(d) *100);
//                ñs_QF2T.setValue(val);
//                
//                // LAS CASILLAS
//                ñt_PF1A.setText(String.valueOf(Ñ.amuyaña.getF1PA(d)));
//                ñt_PF1P.setText(String.valueOf(Ñ.amuyaña.getF1PP(d)));
//                ñt_PF1T.setText(String.valueOf(Ñ.amuyaña.getF1PT(d)));
//                ñt_PF2A.setText(String.valueOf(Ñ.amuyaña.getF2PA(d)));
//                ñt_PF2P.setText(String.valueOf(Ñ.amuyaña.getF2PP(d)));
//                ñt_PF2T.setText(String.valueOf(Ñ.amuyaña.getF2PT(d)));
//                
//                ñt_QF1A.setText(String.valueOf(Ñ.amuyaña.getF1QA(d)));
//                ñt_QF1P.setText(String.valueOf(Ñ.amuyaña.getF1QP(d)));
//                ñt_QF1T.setText(String.valueOf(Ñ.amuyaña.getF1QT(d)));
//                ñt_QF2A.setText(String.valueOf(Ñ.amuyaña.getF2QA(d)));
//                ñt_QF2P.setText(String.valueOf(Ñ.amuyaña.getF2QP(d)));
//                ñt_QF2T.setText(String.valueOf(Ñ.amuyaña.getF2QT(d)));

                reloadParentsList(d);
                reloadRamFormulation(Ñ.getRamFormulation(d));
                
                // enabling delete and clone
                if (ñl_Ram.getSelectedIndex()!=0)
                    ñb_DeleteRam.setEnabled(true);
                ñb_CloneRam.setEnabled(true);
            }
        }
    }//GEN-LAST:event_ñl_RamValueChanged

    private void ñb_EditSysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_EditSysActionPerformed
        if (Ñ.isOpen()) {
            if ("Editar".equals(ñb_EditSys.getText())){
                ñb_EditSys.setText("Guardar");

                //Sistema
                ñt_NameSys.setEditable(true);
                ñt_DesSys.setEditable(true);
                ñt_Author.setEditable(true);
                Ñ.setModified(true);

            } else if ("Guardar".equals(ñb_EditSys.getText())) {
                ñb_EditSys.setText("Editar");
                ñt_NameSys.setEditable(false);
                ñt_DesSys.setEditable(false);
                ñt_Author.setEditable(false);

                Ñ.amuyaña.setTableDate(LocalDate.now());
                ñt_ModifiedDate.setText(Ñ.amuyaña.getTableDate());

                Ñ.amuyaña.setTableName(ñt_NameSys.getText());
                Ñ.amuyaña.setTableDes(ñt_DesSys.getText());
                Ñ.amuyaña.setTableAuthor(ñt_Author.getText());

            }
        } else if (!(Ñ.isOpen())) {
            noDocumentMessage();
        }
    }//GEN-LAST:event_ñb_EditSysActionPerformed

    private void ñb_EditSysItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ñb_EditSysItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_ñb_EditSysItemStateChanged

    private void ñb_GenerateLupascoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_GenerateLupascoActionPerformed
        // if there a document open, try to visualize, else send a message
        Tabulator tabulator = new Tabulator();
        
        if (Ñ.isOpen()){
            boolean signs = ñrb_Signs.isSelected();
            boolean full = ñrb_Full.isSelected();
            int color = ñcmb_LupascoColor.getSelectedIndex();
            int size = ñcmb_LupascoSize.getSelectedIndex();

            JPanel lupascoPanel;

            lupascoPanel = tabulator.getLupasco(signs, full, color, size);

            lupascoPanel.setSize(400, 400);
            GUI_Visualize visualizer = new GUI_Visualize(lupascoPanel);
            visualizer.setVisible(true);
            visualizer.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
            
        } else if (!(Ñ.isOpen())) {
            noDocumentMessage();
        }
    }//GEN-LAST:event_ñb_GenerateLupascoActionPerformed

    private void ñb_ExportLupascoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_ExportLupascoActionPerformed
        
        if (Ñ.isOpen()){
            jDialog3.setVisible(true);
            reloadRamListForExport();
        } else if (!Ñ.isOpen()){
            noDocumentMessage(); 
        }
        
        
    }//GEN-LAST:event_ñb_ExportLupascoActionPerformed

    private void ñfc_ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñfc_ExportActionPerformed
        JFileChooser selectorArchivo = (JFileChooser) evt.getSource();
        String command = evt.getActionCommand();
        Tabulator.Style style = Tabulator.Style.LUPASCO;
        
        // Si escribe algo y hace click en Guardar
        if (command.equals(JFileChooser.APPROVE_SELECTION)){
            File archivoSeleccionado = selectorArchivo.getSelectedFile();
            String file="";
            
            int d = ñl_RamToExport.getSelectedIndex();
            boolean signs = ñrb_Signs.isSelected();
            boolean full = ñrb_Full.isSelected();
            int color = ñcmb_LupascoColor.getSelectedIndex();
            int size = ñcmb_LupascoSize.getSelectedIndex();
            
            if (archivoSeleccionado.toString().endsWith(".gif") ||
                    archivoSeleccionado.toString().endsWith(".jpg") ||
                    archivoSeleccionado.toString().endsWith(".png")){
                
                file = archivoSeleccionado.toString();
                
                try {
                    Ñ.exportAmuyaña(style, Tabulator.LupascoFormat.IMAGE, d, signs, full, color, size, file);
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                } 
                exportSuccessful();
                jDialog3.setVisible(true);
                
                return;
            } else if (archivoSeleccionado.toString().endsWith(".tex")){
                file = archivoSeleccionado.toString();
                
                try {
                    Ñ.exportAmuyaña(style, Tabulator.LupascoFormat.TEX, d, signs, full, color, size, file);
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                exportSuccessful();
                jDialog3.setVisible(true);
                return;
            }
            messageToUser("Escoja un formato.");
            jDialog3.setVisible(true);
            
        } else if (command.equals(JFileChooser.CANCEL_SELECTION)) {
            jDialog3.dispose();
        }
    }//GEN-LAST:event_ñfc_ExportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
            UIManager.setLookAndFeel(
            UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupFormat;
    private javax.swing.ButtonGroup buttonGroupShow;
    private javax.swing.JPanel disjunctions;
    private javax.swing.JPanel general_info;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel visualiation;
    private javax.swing.JButton ñb_CloneRam;
    private javax.swing.JButton ñb_DeleteRam;
    private javax.swing.JButton ñb_EditRam;
    private javax.swing.JButton ñb_EditSys;
    private javax.swing.JButton ñb_ExportLupasco;
    private javax.swing.JButton ñb_FromRam;
    private javax.swing.JButton ñb_GenerateLupasco;
    private javax.swing.JButton ñb_NewRam;
    private javax.swing.JComboBox<String> ñcmb_LupascoColor;
    private javax.swing.JComboBox<String> ñcmb_LupascoSize;
    private javax.swing.JFileChooser ñfc_Export;
    private javax.swing.JFileChooser ñfc_Open;
    private javax.swing.JFileChooser ñfc_SaveAs;
    private javax.swing.JList<String> ñl_FromRam;
    protected static DefaultListModel<String> listModelRamParents;
    static javax.swing.JList<String> ñl_Ram;
    private DefaultListModel<String>  listModelRam;
    private javax.swing.JList<String> ñl_RamToExport;
    private DefaultListModel<String> listModelRamToExport;
    private javax.swing.JMenuItem ñm_Exit;
    private javax.swing.JMenu ñm_File;
    private javax.swing.JMenuItem ñm_New;
    private javax.swing.JMenuItem ñm_Open;
    private javax.swing.JMenuItem ñm_Save;
    private javax.swing.JMenuItem ñm_SaveAs;
    private javax.swing.JRadioButton ñrb_Abbreviated;
    private javax.swing.JRadioButton ñrb_Full;
    private javax.swing.JRadioButton ñrb_Signs;
    private javax.swing.JRadioButton ñrb_Words;
    private javax.swing.JTextField ñt_AbbCon1;
    private javax.swing.JTextField ñt_AbbCon2;
    private javax.swing.JTextField ñt_AbbCon3;
    private javax.swing.JTextField ñt_AbbF1;
    private javax.swing.JTextField ñt_AbbF2;
    private javax.swing.JTextField ñt_AbbRam;
    private javax.swing.JTextField ñt_Author;
    private javax.swing.JLabel ñt_CreationDate;
    private javax.swing.JTextArea ñt_DesSys;
    private javax.swing.JTextPane ñt_DisjFormulation;
    private javax.swing.JLabel ñt_ModifiedDate;
    private javax.swing.JTextField ñt_NameCon1;
    private javax.swing.JTextField ñt_NameCon2;
    private javax.swing.JTextField ñt_NameCon3;
    private javax.swing.JTextField ñt_NameF1;
    private javax.swing.JTextField ñt_NameF2;
    private javax.swing.JTextField ñt_NameRam;
    private javax.swing.JTextField ñt_NameSys;
    // End of variables declaration//GEN-END:variables
    
    // from https://www.youtube.com/watch?v=40ikcEonWng
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().
                getImage(getClass().getResource("/ñ/resources/icon_64.png")));
    }

    private void myInitComponents() {
        //Pestaña Visualización, Lupasco style
        buttonGroupShow.add(ñrb_Signs);
        buttonGroupShow.add(ñrb_Words);
        buttonGroupFormat.add(ñrb_Abbreviated);
        buttonGroupFormat.add(ñrb_Full);
        
        ñrb_Signs.setSelected(true);
        ñrb_Full.setSelected(true);
    }
    
    private void noDocumentMessage(){
        JOptionPane.showMessageDialog(rootPane, "No se ha cargado "
                + "ninguna Tabla de Deducciones.",
                "Error",
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void exportSuccessful() {
        JOptionPane.showMessageDialog(rootPane, "Se ha exportado "
                + "la Tabla con éxito.",
                "Exportación terminada",
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void messageToUser(String string) {
        JOptionPane.showMessageDialog(rootPane, string,
                "Mensaje",
                JOptionPane.INFORMATION_MESSAGE);
    }

//    private void reloadConList() {
//        listModelCon.clear();
//        for (Disjunction d : Ñ.amuyaña.getDisjunctions()){
//            listModelCon.addElement(Ñ.amuyaña.getDisjName(d));
//        }
//    }

    private void reloadRamList() {
        listModelRam.clear();
        for (Disjunction d : Ñ.amuyaña.getDisjunctions()){
            listModelRam.addElement(Ñ.amuyaña.getDisjName(d) + " (" + Ñ.amuyaña.getDisjAbb(d) + ")");
        }
    }

//    private void reloadConFormulation(String formulation) {
//        ñt_ConFormulation.setText(formulation);
//    }

    private void reloadParentsList(Disjunction d) {
        listModelRamParents.clear();
        for (String s : Ñ.getParentsNames(d)){
            listModelRamParents.addElement(s);
        }
    }
    
    private void reloadRamFormulation(String formulation){
        ñt_DisjFormulation.setText(formulation);
    }
    
    private void reloadRamListForExport(){
        listModelRamToExport.clear();
        for (Disjunction d : Ñ.amuyaña.getDisjunctions()){
                        listModelRamToExport.addElement(Ñ.amuyaña.getDisjName(d));
        }
        ñl_RamToExport.setSelectedIndex(0);
    }

    private void cleanFields() {
        ñt_AbbCon1.setText("");
        ñt_AbbCon2.setText("");
        ñt_AbbCon3.setText("");
        ñt_AbbF1.setText("");
        ñt_AbbF2.setText("");
        ñt_AbbRam.setText("");
        ñt_Author.setText("");
//        ñt_DesCon1.setText("");
//        ñt_DesCon2.setText("");
//        ñt_DesCon3.setText("");
//        ñt_DesF1.setText("");
//        ñt_DesF2.setText("");
        ñt_DesSys.setText("");
        ñt_NameCon1.setText("");
        ñt_NameCon2.setText("");
        ñt_NameCon3.setText("");
        ñt_NameF1.setText("");
        ñt_NameF2.setText("");
        ñt_NameRam.setText("");
        ñt_NameSys.setText("");

        listModelRam.clear();
        listModelRamParents.clear();
    }

    private void setupFields() {
         // SISTEMA
        ñt_NameSys.setText(Ñ.amuyaña.getTableName());
        ñt_DesSys.setText(Ñ.amuyaña.getTableDes());
        ñt_Author.setText(Ñ.amuyaña.getTableAuthor());
        ñt_ModifiedDate.setText(Ñ.amuyaña.getTableDate());
        ñt_CreationDate.setText(Ñ.amuyaña.getDATE());
        
        ñt_NameSys.setEnabled(true);
        ñt_DesSys.setEnabled(true);
        ñt_Author.setEnabled(true);
        
        reloadRamList();
        
        ñt_NameRam.setEnabled(true);
        ñt_AbbRam.setEnabled(true);
        ñt_NameCon1.setEnabled(true);
        ñt_NameCon2.setEnabled(true);
        ñt_NameCon3.setEnabled(true);
        ñt_AbbCon1.setEnabled(true);
        ñt_AbbCon2.setEnabled(true);
        ñt_AbbCon3.setEnabled(true);
//        ñt_DesCon1.setEnabled(true);
//        ñt_DesCon2.setEnabled(true);
//        ñt_DesCon3.setEnabled(true);
        
        ñl_Ram.setOpaque(true);
        ñl_FromRam.setOpaque(true);
    
        ñt_NameF1.setEnabled(true);
        ñt_NameF2.setEnabled(true);
        ñt_AbbF1.setEnabled(true);
        ñt_AbbF2.setEnabled(true);
//        ñt_DesF1.setEnabled(true);
//        ñt_DesF2.setEnabled(true);

        if ("Guardar".equals(ñb_EditSys.getText())) ñb_EditSys.doClick();
        if ("Guardar".equals(ñb_EditRam.getText())) ñb_EditRam.doClick();
    }

    private void enableOptions() {
        //Menu bar options
        ñm_Save.setEnabled(true);
        ñm_SaveAs.setEnabled(true);
        
        //button options
        ñb_EditRam.setEnabled(true);
        ñb_EditSys.setEnabled(true);
        ñb_NewRam.setEnabled(true);
        ñb_ExportLupasco.setEnabled(true);
        ñb_GenerateLupasco.setEnabled(true);
        
        // In visualization tab, Lupasco style
        ñrb_Abbreviated.setEnabled(true);
        ñrb_Full.setEnabled(true);
        ñrb_Signs.setEnabled(true);
        ñrb_Words.setEnabled(true);
        
        ñcmb_LupascoColor.setEnabled(true);
        ñcmb_LupascoSize.setEnabled(true);
    }
}

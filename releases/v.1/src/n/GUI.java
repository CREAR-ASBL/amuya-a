/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package n;
import amuyana.Disjunction;
import com.google.gson.JsonSyntaxException;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ayar
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form Amuyaña_GUI
     */
    GUI() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        ñfc_SaveAs = new javax.swing.JFileChooser();
        jDialog2 = new javax.swing.JDialog();
        ñfc_Open = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ñt_NameSys = new javax.swing.JTextField();
        ñt_AbbSys = new javax.swing.JTextField();
        ñt_Author = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ñt_DesSys = new javax.swing.JTextArea();
        ñt_Date = new javax.swing.JFormattedTextField();
        ñb_EditSys = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listModelRam = new DefaultListModel();
        ñl_Ram = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        ñt_NameRam = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        ñt_AbbRam = new javax.swing.JTextField();
        ñb_NewRam = new javax.swing.JButton();
        ñb_CloneRam = new javax.swing.JButton();
        ñb_DeleteRam = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        ñb_FromRam = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listModelRamParents = new DefaultListModel();
        ñl_FromRam = new javax.swing.JList<>();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        ñt_NameCon1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        ñt_AbbCon1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ñt_DesCon1 = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        ñt_NameCon2 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ñt_AbbCon2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ñt_DesCon2 = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        ñt_NameCon3 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        ñt_AbbCon3 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ñt_DesCon3 = new javax.swing.JTextArea();
        ñb_EditRam = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        listModelImp = new DefaultListModel();
        ñl_Imp = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        ñt_NameF1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        ñt_AbbF1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        ñt_DesF1 = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        ñt_NameF2 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        ñt_AbbF2 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        ñt_DesF2 = new javax.swing.JTextArea();
        ñb_EditImp = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        info = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        ñm_File = new javax.swing.JMenu();
        ñm_New = new javax.swing.JMenuItem();
        ñm_Open = new javax.swing.JMenuItem();
        ñm_Save = new javax.swing.JMenuItem();
        ñm_SaveAs = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        ñm_Exit = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jDialog1.setTitle("Guardar en");
        jDialog1.setAlwaysOnTop(true);
        jDialog1.setResizable(false);
        jDialog1.setSize(new java.awt.Dimension(560, 326));

        ñfc_SaveAs.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        ñfc_SaveAs.setApproveButtonText("Guardar");
        ñfc_SaveAs.setApproveButtonToolTipText("");
        ñfc_SaveAs.setFileFilter(new FileNameExtensionFilter("Amuyaña document (*.ña, *.json)", "ña", "json")

        );
        ñfc_SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñfc_SaveAsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñfc_SaveAs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addGap(0, 43, Short.MAX_VALUE)
                .addComponent(ñfc_SaveAs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jDialog2.setTitle("Abrir documento Amuyaña");
        jDialog2.setAlwaysOnTop(true);
        jDialog2.setResizable(false);
        jDialog2.setSize(new java.awt.Dimension(560, 326));

        ñfc_Open.setApproveButtonText("Abrir");
        ñfc_Open.setApproveButtonToolTipText("");
        ñfc_Open.setFileFilter(new FileNameExtensionFilter("Amuyaña document (*.ña, *.json)", "ña", "json"));
        ñfc_Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñfc_OpenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñfc_Open, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ñfc_Open, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Amuyaña, generador de Tablas de Deducciones");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.setName(""); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Sistema contradictorio");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del sistema"));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("Última modificación");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Nombre");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setText("Abreviación");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel7.setText("Autor (email)");

        ñt_NameSys.setEditable(false);
        ñt_NameSys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñt_NameSysActionPerformed(evt);
            }
        });

        ñt_AbbSys.setEditable(false);

        ñt_Author.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel6.setText("Descripción");

        ñt_DesSys.setEditable(false);
        ñt_DesSys.setColumns(20);
        ñt_DesSys.setLineWrap(true);
        ñt_DesSys.setRows(5);
        ñt_DesSys.setToolTipText("");
        jScrollPane1.setViewportView(ñt_DesSys);

        ñt_Date.setEditable(false);
        ñt_Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñt_DateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(ñt_Author, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(jLabel4))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(ñt_NameSys, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(ñt_AbbSys, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(ñt_Date)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ñt_NameSys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(ñt_AbbSys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ñt_Author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(ñt_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ñb_EditSys.setText("Editar");
        ñb_EditSys.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ñb_EditSysItemStateChanged(evt);
            }
        });
        ñb_EditSys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_EditSysActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(183, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(436, 436, 436)
                        .addComponent(ñb_EditSys))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ñb_EditSys)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sistema", jPanel4);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel8.setText("Ramificaciones y Conjunciones contradiccionales");

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Ramificaciones"));

        ñl_Ram.setModel(listModelRam);
        ñl_Ram.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ñl_Ram.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ñl_Ram.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ñl_RamValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ñl_Ram);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel10.setText("Nombre");

        ñt_NameRam.setEditable(false);

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel11.setText("Abreviación");

        ñt_AbbRam.setEditable(false);
        ñt_AbbRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñt_AbbRamActionPerformed(evt);
            }
        });

        ñb_NewRam.setText("Nueva");
        ñb_NewRam.setEnabled(false);
        ñb_NewRam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ñb_NewRamMouseClicked(evt);
            }
        });
        ñb_NewRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_NewRamActionPerformed(evt);
            }
        });

        ñb_CloneRam.setText("Duplicar");
        ñb_CloneRam.setEnabled(false);
        ñb_CloneRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_CloneRamActionPerformed(evt);
            }
        });

        ñb_DeleteRam.setText("Eliminar");
        ñb_DeleteRam.setEnabled(false);
        ñb_DeleteRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_DeleteRamActionPerformed(evt);
            }
        });

        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        ñb_FromRam.setText("Desciende de:");
        ñb_FromRam.setEnabled(false);
        ñb_FromRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_FromRamActionPerformed(evt);
            }
        });

        ñl_FromRam.setModel(listModelRamParents);
        ñl_FromRam.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ñl_FromRam.setFocusable(false);
        ñl_FromRam.setOpaque(false);
        jScrollPane3.setViewportView(ñl_FromRam);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(ñb_FromRam)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(ñb_FromRam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(ñb_NewRam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ñb_CloneRam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ñb_DeleteRam)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ñt_AbbRam, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ñt_NameRam)))
                .addContainerGap())
            .addComponent(jScrollPane2)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ñt_NameRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ñt_AbbRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ñb_NewRam)
                    .addComponent(ñb_DeleteRam)
                    .addComponent(ñb_CloneRam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Conjunción contradiccional positiva"));
        jPanel8.setPreferredSize(new java.awt.Dimension(600, 110));

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel12.setText("Nombre");

        ñt_NameCon1.setEditable(false);

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel13.setText("Abreviación");

        ñt_AbbCon1.setEditable(false);

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel14.setText("Descripción");

        ñt_DesCon1.setEditable(false);
        ñt_DesCon1.setColumns(20);
        ñt_DesCon1.setLineWrap(true);
        ñt_DesCon1.setRows(5);
        jScrollPane4.setViewportView(ñt_DesCon1);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(35, 35, 35)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ñt_AbbCon1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ñt_NameCon1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(ñt_NameCon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(ñt_AbbCon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Implicación contradiccional negativa"));
        jPanel9.setPreferredSize(new java.awt.Dimension(600, 110));

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel15.setText("Nombre");

        ñt_NameCon2.setEditable(false);

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel16.setText("Abreviación");

        ñt_AbbCon2.setEditable(false);

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel17.setText("Descripción");

        ñt_DesCon2.setEditable(false);
        ñt_DesCon2.setColumns(20);
        ñt_DesCon2.setLineWrap(true);
        ñt_DesCon2.setRows(5);
        jScrollPane5.setViewportView(ñt_DesCon2);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15))
                .addGap(12, 12, 12)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ñt_AbbCon2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ñt_NameCon2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(ñt_NameCon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(ñt_AbbCon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Implicación contradictorial o simétrica"));
        jPanel10.setPreferredSize(new java.awt.Dimension(600, 110));

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel18.setText("Nombre");

        ñt_NameCon3.setEditable(false);

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel19.setText("Abreviación");

        ñt_AbbCon3.setEditable(false);

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel20.setText("Descripción");

        ñt_DesCon3.setEditable(false);
        ñt_DesCon3.setColumns(20);
        ñt_DesCon3.setLineWrap(true);
        ñt_DesCon3.setRows(5);
        jScrollPane6.setViewportView(ñt_DesCon3);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(35, 35, 35)))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ñt_AbbCon3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ñt_NameCon3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(ñt_NameCon3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(ñt_AbbCon3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 40, Short.MAX_VALUE))
        );

        ñb_EditRam.setText("Editar");
        ñb_EditRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_EditRamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(ñb_EditRam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ñb_EditRam)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ramificaciones", jPanel6);

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel21.setText("Dualidades contradictorias y fenómenos antagónicos");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Conjunciones"));

        ñl_Imp.setModel(listModelImp);
        ñl_Imp.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ñl_Imp.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ñl_ImpValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(ñl_Imp);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Elemento"));

        jLabel23.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel23.setText("Nombre");

        ñt_NameF1.setEditable(false);

        jLabel24.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel24.setText("Abreviación");

        ñt_AbbF1.setEditable(false);

        jLabel25.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel25.setText("Descripción general y de sus tres estados");

        ñt_DesF1.setEditable(false);
        ñt_DesF1.setColumns(20);
        ñt_DesF1.setLineWrap(true);
        ñt_DesF1.setRows(5);
        jScrollPane8.setViewportView(ñt_DesF1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ñt_NameF1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ñt_AbbF1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel25))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(ñt_NameF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(ñt_AbbF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8)
                .addContainerGap())
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Anti-Elemento"));

        jLabel29.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel29.setText("Nombre");

        ñt_NameF2.setEditable(false);

        jLabel30.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel30.setText("Abreviación");

        ñt_AbbF2.setEditable(false);

        jLabel31.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel31.setText("Descripción general y de sus tres estados");

        ñt_DesF2.setEditable(false);
        ñt_DesF2.setColumns(20);
        ñt_DesF2.setLineWrap(true);
        ñt_DesF2.setRows(5);
        jScrollPane10.setViewportView(ñt_DesF2);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane10)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ñt_NameF2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ñt_AbbF2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel31))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(ñt_NameF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(ñt_AbbF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10)
                .addContainerGap())
        );

        ñb_EditImp.setText("Editar");
        ñb_EditImp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñb_EditImpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(ñb_EditImp)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jLabel21)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ñb_EditImp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Conjunciones", jPanel11);

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.add(jSeparator2);

        info.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        info.setText("Bienvenida a Amuyaña");
        info.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        info.setMaximumSize(new java.awt.Dimension(850, 15));
        jToolBar1.add(info);

        ñm_File.setText("Archivo");
        ñm_File.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                ñm_FileMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        ñm_File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_FileActionPerformed(evt);
            }
        });

        ñm_New.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        ñm_New.setText("Nueva Tabla de Deducciones");
        ñm_New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_NewActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_New);

        ñm_Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        ñm_Open.setText("Abrir");
        ñm_Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_OpenActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_Open);

        ñm_Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        ñm_Save.setText("Guardar");
        ñm_Save.setEnabled(false);
        ñm_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_SaveActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_Save);

        ñm_SaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        ñm_SaveAs.setText("Guardar Como");
        ñm_SaveAs.setEnabled(false);
        ñm_SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_SaveAsActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_SaveAs);
        ñm_File.add(jSeparator1);

        ñm_Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        ñm_Exit.setText("Salir");
        ñm_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ñm_ExitActionPerformed(evt);
            }
        });
        ñm_File.add(ñm_Exit);

        jMenuBar1.add(ñm_File);

        jMenu1.setText("Ayuda");

        jMenuItem2.setText("Acerca de");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(1010, 604));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ñm_SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_SaveAsActionPerformed
        // if isOpen -> saveAs, if !isOpen -> do nothing
        if (N.isOpen()){
            jDialog1.setVisible(true);
        } else if (!(N.isOpen())) {
            // do nothing
        }
    }//GEN-LAST:event_ñm_SaveAsActionPerformed

    private void ñm_NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_NewActionPerformed
        // Si ya hay un documento abierto
        
        if (N.isOpen()) {
            if (N.isModified()){
                int answer = JOptionPane.showConfirmDialog(rootPane,
                        "¿Quiere guardar los cambios antes de abrir "
                                + "otro documento?",
                    "¿Guardar los cambios?", JOptionPane.YES_NO_CANCEL_OPTION);

                switch (answer) {
                    // if Cancel, jump back to the main frame
                    case 2:
                        return;
                    // if No, continue to read after switch
                    case 1:
                        break;
                    // if Yes, save Jtexts and automatically click save
                    // (if the file was not saved yet, it will autoclick saveAs)
                    case 0: {
                        if ("Guardar".equals(ñb_EditSys.getText())) 
                            ñb_EditSys.doClick();
                        if ("Guardar".equals(ñb_EditRam.getText())) 
                            ñb_EditRam.doClick();
                        if ("Guardar".equals(ñb_EditImp.getText())) 
                            ñb_EditImp.doClick();
                        
                        if (N.getFile()!=null) {
                            ñm_Save.doClick();
                            break;
                        }
                        else if (N.getFile() == null ){
                            ñm_SaveAs.doClick();
                            return;
                        }
                    }
                }
            }
            
            // As it's a new file, set its path to null
            N.setFile(null);
            
            // Counter of Disjunctions, Conjunctions and Phenomena
            N.table.resetCounter();
            
            // Erase reference to object table = reset amuyaña
            N.table = null;
            
            // very brief setOpen(false) since in a few lines we setOpen(true)
            N.setOpen(false);
            
            ñt_AbbCon1.setText("");
            ñt_AbbCon2.setText("");
            ñt_AbbCon3.setText("");
            ñt_AbbF1.setText("");
            ñt_AbbF2.setText("");
            ñt_AbbRam.setText("");
            ñt_AbbSys.setText("");
            ñt_Author.setText("");
            ñt_Date.setText("");
            ñt_DesCon1.setText("");
            ñt_DesCon2.setText("");
            ñt_DesCon3.setText("");
            ñt_DesF1.setText("");
            ñt_DesF2.setText("");
            ñt_DesSys.setText("");
            ñt_NameCon1.setText("");
            ñt_NameCon2.setText("");
            ñt_NameCon3.setText("");
            ñt_NameF1.setText("");
            ñt_NameF2.setText("");
            ñt_NameRam.setText("");
            ñt_NameSys.setText("");

            listModelImp.clear();
            listModelRam.clear();
            listModelRamParents.clear();
        }
        
        N.newAmuyaña();
        N.setOpen(true);
        N.setModified(true);
        ñm_Save.setEnabled(true);
        ñm_SaveAs.setEnabled(true);

        // SISTEMA
        ñt_NameSys.setText(N.table.getTableName());
        ñt_AbbSys.setText(N.table.getTableAbb());
        ñt_DesSys.setText(N.table.getTableDes());
        ñt_Author.setText(N.table.getTableAuthor());
        ñt_Date.setText(N.table.getTableDate());

        //RAMIFICATIONS
        for (Disjunction d : N.table.getDisjunctions()){
            listModelRam.addElement(N.table.getDisjName(d));
        }

        //CONJUNCTIONS
        for (Disjunction d : N.table.getDisjunctions()){
            listModelImp.addElement(N.table.getDisjName(d));
        }
        
        if ("Guardar".equals(ñb_EditSys.getText())) ñb_EditSys.doClick();
        if ("Guardar".equals(ñb_EditRam.getText())) ñb_EditRam.doClick();
        if ("Guardar".equals(ñb_EditImp.getText())) ñb_EditImp.doClick();
        
        // change the window title
        setTitle("Documento sin guardar - "
                + "Amuyaña, generador de Tablas de Deducciones");
        
    }//GEN-LAST:event_ñm_NewActionPerformed

    private void ñm_OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_OpenActionPerformed

        // si hubieron cambios (si se apretó algún botón "editar") o si hay un 
        // nuevo documento sin guardar, preguntar si se quiere guardar antes de
        // abrir
        if (N.isModified() || (N.getFile()==null && N.isOpen())){
            int answer = JOptionPane.showConfirmDialog(rootPane, "¿Quiere guardar los"
                    + " cambios antes de abrir otro documento?",
                    "¿Guardar los cambios?", JOptionPane.YES_NO_CANCEL_OPTION);
            switch (answer) {
                // do nothing
                case 2:
                    break;
                // open dialog (and then delete data)
                case 1: jDialog2.setVisible(true);
                    break;
                // save, then open dialog.
                case 0: {
                    if (N.getFile()!=null) {
                        ñm_Save.doClick();
                        jDialog2.setVisible(true);
                    }
                    else if (N.getFile() == null ){
                        ñm_SaveAs.doClick();
                    }
                    break;
                }
            }
        } else if (!(N.isModified()) || !(N.isOpen())){
            jDialog2.setVisible(true);
            return;
        }
        
        if ("Guardar".equals(ñb_EditSys.getText())) ñb_EditSys.doClick();
        if ("Guardar".equals(ñb_EditRam.getText())) ñb_EditRam.doClick();
        if ("Guardar".equals(ñb_EditImp.getText())) ñb_EditImp.doClick();
        
    }//GEN-LAST:event_ñm_OpenActionPerformed

    private void ñm_FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_FileActionPerformed

    }//GEN-LAST:event_ñm_FileActionPerformed

    private void ñm_FileMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_ñm_FileMenuSelected
        
    }//GEN-LAST:event_ñm_FileMenuSelected

    private void ñm_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_SaveActionPerformed
        // Si ya hay documento abierto guardar
        if ((N.isOpen())){
            
            // Hacer que todos los botones estén en editar, es decir guardar
            // los datos en la memoria
            if ("Guardar".equals(ñb_EditSys.getText())) ñb_EditSys.doClick();
            if ("Guardar".equals(ñb_EditRam.getText())) ñb_EditRam.doClick();
            if ("Guardar".equals(ñb_EditImp.getText())) ñb_EditImp.doClick();
            
            // Si ya hay una dirección y nombre de archivo, guardar
            if ((N.getFile()!=null)) {
                try {
                    N.saveAmuyaña();
                    N.setModified(false);
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            // Si no hay una dirección, es decir es un documento sin haberse 
            // guardado ni haberse abierto, hacer saveAS
            else if ((N.getFile()==null)) {
                ñm_SaveAs.doClick();
            }
        } else if (!(N.isOpen())){
            // do nothing
        }
    }//GEN-LAST:event_ñm_SaveActionPerformed

    private void ñm_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñm_ExitActionPerformed
        // antes de salir verificar si hubieron cambios y preguntar si guardar
        if (N.isModified()){
            int answer = JOptionPane.showConfirmDialog(rootPane,
                    "¿Quiere guardar los cambios antes de abrir "
                            + "otro documento?",
                "¿Guardar los cambios?", JOptionPane.YES_NO_CANCEL_OPTION);

            switch (answer) {
                case 2:
                    return; // jump back to the main frame
                case 1:
                    System.exit(0);
                case 0: {
                    if ("Guardar".equals(ñb_EditSys.getText())) 
                        ñb_EditSys.doClick();
                    if ("Guardar".equals(ñb_EditRam.getText())) 
                        ñb_EditRam.doClick();
                    if ("Guardar".equals(ñb_EditImp.getText())) 
                        ñb_EditImp.doClick();

                    if (N.getFile()!=null) {
                        ñm_Save.doClick();
                        break;
                    }
                    else if (N.getFile() == null ){
                        ñm_SaveAs.doClick();
                        return;
                    }
                }
            }
        } else if (!N.isModified()){
        System.exit(0);
        }
        
    }//GEN-LAST:event_ñm_ExitActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        ñm_New.doClick();
//        ñm_Save.doClick();
//        ñm_Exit.doClick();
    }//GEN-LAST:event_formWindowOpened

    private void ñfc_SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñfc_SaveAsActionPerformed
        JFileChooser selectorArchivo = (JFileChooser) evt.getSource();
        String command = evt.getActionCommand();
        
        // Si escribe algo y hace click en Guardar
        if (command.equals(JFileChooser.APPROVE_SELECTION)){
            File archivoSeleccionado = selectorArchivo.getSelectedFile();
            try {
                // Si lo que escribe termina en .ña o .json, guardar con ese nombre. Sino, añadir .ña y guardaar
                if (archivoSeleccionado.getName().endsWith(".ña") || archivoSeleccionado.getName().endsWith(".json")){
                    N.setFile(archivoSeleccionado.getAbsolutePath());
                    N.saveAmuyaña();
                    jDialog1.dispose();
                    N.setModified(false);
                } else if (!(archivoSeleccionado.getName().endsWith(".ña")) ||
                        !(archivoSeleccionado.getName().endsWith(".json"))){
                    N.setFile(archivoSeleccionado.getAbsolutePath()+".ña");
                    N.saveAmuyaña();
                    jDialog1.dispose();
                    N.setModified(false);
                }
                
                // If there was no an exception, set the window title to the
                // new name
                setTitle(archivoSeleccionado.getAbsolutePath() + 
                        " - Amuyaña, generador de Tablas de Deducciones");
                
            } catch (IOException ex) {
               //
            }

        } else if (command.equals(JFileChooser.CANCEL_SELECTION)) {
            jDialog1.dispose();
        }
    }//GEN-LAST:event_ñfc_SaveAsActionPerformed

    private void ñfc_OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñfc_OpenActionPerformed
        JFileChooser selectorArchivo = (JFileChooser) evt.getSource();
        String command = evt.getActionCommand();
        
        // Si click en "abrir", memorizar el nombre indicado en Ñ.file
        if (command.equals(JFileChooser.APPROVE_SELECTION)){
            File archivoSeleccionado = selectorArchivo.getSelectedFile();
            N.setFile(archivoSeleccionado.getAbsolutePath());
            // intentar abrir el archivo .ña o .json, cerrar la ventana 
            try {
                N.openAmuyaña();
                ñm_Save.setEnabled(true);
                ñm_SaveAs.setEnabled(true);
                N.setModified(false);
                jDialog2.dispose();
            } catch (FileNotFoundException ex) { 
                JOptionPane.showMessageDialog(rootPane, "El archivo no existe.",
                    "Error",
                    JOptionPane.INFORMATION_MESSAGE);
                return;
            } catch (JsonSyntaxException j){
                JOptionPane.showMessageDialog(rootPane, "No se puede abrir el"
                        + " archivo seleccionado.",
                    "Error",
                    JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            ñt_AbbCon1.setText("");
            ñt_AbbCon2.setText("");
            ñt_AbbCon3.setText("");
            ñt_AbbF1.setText("");
            ñt_AbbF2.setText("");
            ñt_AbbRam.setText("");
            ñt_AbbSys.setText("");
            ñt_Author.setText("");
            ñt_Date.setText("");
            ñt_DesCon1.setText("");
            ñt_DesCon2.setText("");
            ñt_DesCon3.setText("");
            ñt_DesF1.setText("");
            ñt_DesF2.setText("");
            ñt_DesSys.setText("");
            ñt_NameCon1.setText("");
            ñt_NameCon2.setText("");
            ñt_NameCon3.setText("");
            ñt_NameF1.setText("");
            ñt_NameF2.setText("");
            ñt_NameRam.setText("");
            ñt_NameSys.setText("");

            listModelImp.clear();
            listModelRam.clear();
            listModelRamParents.clear();

            N.table.resetCounter();

            ñt_NameSys.setText(N.table.getTableName());
            ñt_AbbSys.setText(N.table.getTableAbb());
            ñt_DesSys.setText(N.table.getTableDes());
            ñt_Author.setText(N.table.getTableAuthor());
            ñt_Date.setText(N.table.getTableDate());

            //RAMIFICATIONS
            for (Disjunction d : N.table.getDisjunctions()){
                listModelRam.addElement(N.table.getDisjName(d));
            }

            //CONJUNCTIONS
            for (Disjunction d : N.table.getDisjunctions()){
                listModelImp.addElement(N.table.getDisjName(d));
            }
            
            // Establece el título de la ventana con el nombre del archivo
            super.setTitle(N.nameInTitle()+"Amuyaña, generador de Tablas de Deducciones");
            
        } else if (command.equals(JFileChooser.CANCEL_SELECTION)) {
            jDialog2.dispose();
            return;
        }

    

    }//GEN-LAST:event_ñfc_OpenActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // si se ha editado enviar a ñm_Exit
        if (N.isModified()) ñm_Exit.doClick();
        else if (!N.isModified()) System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        GUI_Acerca ñw_Acerca = new GUI_Acerca();
            ñw_Acerca.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void ñb_EditImpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_EditImpActionPerformed
        if (N.isOpen()) {
            if ("Editar".equals(ñb_EditImp.getText())){

                //Si la selección está vacía, pedir seleccionar una conjunción
                if (ñl_Imp.isSelectionEmpty()){
                    info.setText("Seleccionar una conjunción para editarla.");
                } else if (!(ñl_Imp.isSelectionEmpty())){
                    ñb_EditImp.setText("Guardar");
                    ñl_Imp.setEnabled(false);

                    ñt_NameF1.setEditable(true);
                    ñt_NameF2.setEditable(true);

                    ñt_AbbF1.setEditable(true);
                    ñt_AbbF2.setEditable(true);

                    ñt_DesF1.setEditable(true);
                    ñt_DesF2.setEditable(true);
                    N.setModified(true);
                }

            } else if ("Guardar".equals(ñb_EditImp.getText())) {
                ñb_EditImp.setText("Editar");
                ñl_Imp.setEnabled(true);

                ñt_NameF1.setEditable(false);
                ñt_NameF2.setEditable(false);

                ñt_AbbF1.setEditable(false);
                ñt_AbbF2.setEditable(false);

                ñt_DesF1.setEditable(false);
                ñt_DesF2.setEditable(false);

                //Guardar los datos escritos en las casillas jTextArea
                Disjunction d = N.table.getDisjunctions().get(ñl_Imp.getSelectedIndex());

                N.table.setF1Name(d, ñt_NameF1.getText());
                N.table.setF2Name(d, ñt_NameF2.getText());

                N.table.setF1Abb(d, ñt_AbbF1.getText());
                N.table.setF2Abb(d, ñt_AbbF2.getText());

                N.table.setF1Des(d, ñt_DesF1.getText());
                N.table.setF2Des(d, ñt_DesF2.getText());

                // Reactualiza la lista
                listModelImp.clear();
                for (Disjunction dis : N.table.getDisjunctions()){
                    listModelImp.addElement(N.table.getDisjName(dis));
                }

            }
        } else if (!(N.isOpen())) {
            JOptionPane.showMessageDialog(rootPane, "No se ha cargado "
                + "ninguna Tabla de Deducciones y no hay nada que editar.\n"
                + "Porfavor crear o abrir un nuevo archivo desde el menú "
                + "Archivo.",
                "No hay nada que editar",
                JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_ñb_EditImpActionPerformed

    private void ñl_ImpValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ñl_ImpValueChanged
        if (ñl_Imp.getValueIsAdjusting()){
            //Do nothing, the value is just adjusting

        } else if (!(ñl_Imp.getValueIsAdjusting())) {
            // if index is -1, ignore! this function has been activated
            // by another one... else, do the magic!
            if (ñl_Imp.getSelectedIndex()==-1) {
                //
            } else if (ñl_Imp.getSelectedIndex() >= 0) {

                Disjunction d = N.table.getDisjunctions().
                get(ñl_Imp.getSelectedIndex());

                // DATOS DE LA CONJUNCIÓN

                //DATOS DE LOS FENÓMENOS
                ñt_NameF1.setText(N.table.getF1Name(d));
                ñt_NameF2.setText(N.table.getF2Name(d));

                ñt_AbbF1.setText(N.table.getF1Abb(d));
                ñt_AbbF2.setText(N.table.getF2Abb(d));

                ñt_DesF1.setText(N.table.getF1Des(d));
                ñt_DesF2.setText(N.table.getF2Des(d));
            }
        }
    }//GEN-LAST:event_ñl_ImpValueChanged

    private void ñb_EditRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_EditRamActionPerformed
        // Si ya hay un documento "abierto"
        if (N.isOpen()) {
            // Si el botón está en Editar
            if ("Editar".equals(ñb_EditRam.getText())){
                //Si la selección está vacía, por favor seleccionar un elemento
                if(ñl_Ram.isSelectionEmpty()){
                    ñb_EditRam.setText("Guardar");
                    ñb_NewRam.setEnabled(true);
                    ñl_Ram.setEnabled(false);
                } else if (!(ñl_Ram.isSelectionEmpty())){
                    ñb_EditRam.setText("Guardar");
                    ñl_Ram.setEnabled(false);
                    ñl_FromRam.setFocusable(true);

                    ñt_NameRam.setEditable(true);
                    ñt_AbbRam.setEditable(true);

                    ñt_NameCon1.setEditable(true);
                    ñt_NameCon2.setEditable(true);
                    ñt_NameCon3.setEditable(true);

                    ñt_AbbCon1.setEditable(true);
                    ñt_AbbCon2.setEditable(true);
                    ñt_AbbCon3.setEditable(true);

                    ñt_DesCon1.setEditable(true);
                    ñt_DesCon2.setEditable(true);
                    ñt_DesCon3.setEditable(true);

                    //ñb_NewRam.setEnabled(true);
                    ñb_DeleteRam.setEnabled(true);
                    ñb_CloneRam.setEnabled(true);
                    ñb_FromRam.setEnabled(true);
                    ñb_NewRam.setEnabled(true);

                    N.setModified(true);
                }
            } else if ("Guardar".equals(ñb_EditRam.getText())) {
                ñb_EditRam.setText("Editar");

                ñl_Ram.setFocusable(true);
                ñl_Ram.setEnabled(true);
                ñl_FromRam.setFocusable(false);

                ñt_NameRam.setEditable(false);
                ñt_AbbRam.setEditable(false);

                ñt_NameCon1.setEditable(false);
                ñt_NameCon2.setEditable(false);
                ñt_NameCon3.setEditable(false);

                ñt_AbbCon1.setEditable(false);
                ñt_AbbCon2.setEditable(false);
                ñt_AbbCon3.setEditable(false);

                ñt_DesCon1.setEditable(false);
                ñt_DesCon2.setEditable(false);
                ñt_DesCon3.setEditable(false);

                //ñb_NewRam.setEnabled(false);
                ñb_CloneRam.setEnabled(false);
                ñb_DeleteRam.setEnabled(false);
                ñb_FromRam.setEnabled(false);
                ñb_NewRam.setEnabled(false);
                // Si la selección está vacia no hacer nada.
                // Si la selección no está vacia, guardar los datos de la
                // disyunción seleccionada. Gracias
                if (ñl_Ram.isSelectionEmpty()){
                    //
                }
                else if (!(ñl_Ram.isSelectionEmpty())) {
                    N.table.setDisjName(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_NameRam.getText());

                    N.table.setDisjAbb(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_AbbRam.getText());

                    //
                    N.table.setCon1Name(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_NameCon1.getText());

                    N.table.setCon2Name(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_NameCon2.getText());

                    N.table.setCon3Name(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_NameCon3.getText());

                    //
                    N.table.setCon1Abb(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_AbbCon1.getText());

                    N.table.setCon2Abb(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_AbbCon2.getText());

                    N.table.setCon3Abb(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_AbbCon3.getText());

                    //
                    N.table.setCon1Des(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_DesCon1.getText());

                    N.table.setCon2Des(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_DesCon2.getText());

                    N.table.setCon3Des(N.table.getDisjunctions().
                        get(ñl_Ram.getSelectedIndex()),
                        ñt_DesCon3.getText());

                    listModelRam.clear();
                    for (Disjunction d : N.table.getDisjunctions()){
                        listModelRam.addElement(N.table.getDisjName(d));
                    }

                    listModelImp.clear();
                    for (Disjunction d : N.table.getDisjunctions()){
                        listModelImp.addElement(N.table.getDisjName(d));
                    }
                }
                info.setText("Guardado...");

            }
        } else if (!(N.isOpen())) {
            JOptionPane.showMessageDialog(rootPane, "No se ha cargado "
                + "ninguna Tabla de Deducciones y no hay nada que editar.\n"
                + "Porfavor crear o abrir un nuevo archivo desde el menú "
                + "Archivo.",
                "No hay nada que editar",
                JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_ñb_EditRamActionPerformed

    private void ñb_FromRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_FromRamActionPerformed
        if (ñl_Ram.isSelectionEmpty()){
            //Do nothing
        } else if (!ñl_Ram.isSelectionEmpty()) {
            GUI_Cons ñw_RamParents = new GUI_Cons();
            ñw_RamParents.setVisible(true);

            GUI_Cons.listModelCons.clear();
            for(String s : N.getAllParents()){
                GUI_Cons.listModelCons.addElement(s);
            }

            // Preselecciona en la lista ñl_FromRam las conjunciones que son
            // padres de la disyunción seleccionada en ñl_Ram. Ahora se espera
            // alguna acción de la ventana generada por GUI_Cons.java
            GUI_Cons.ñl_Cons.setSelectedIndices(N.table.
                getParentsIndices(N.table.getDisjunctions().
                    get(ñl_Ram.getSelectedIndex())));
        }

    }//GEN-LAST:event_ñb_FromRamActionPerformed

    private void ñb_DeleteRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_DeleteRamActionPerformed
        if(ñl_Ram.isSelectionEmpty()){
            // Do nothing or there will be an exception
        } else if (!(ñl_Ram.isSelectionEmpty())){
            // Si seleccionó el root, solo informar que no se lo puede borrar.
            if (ñl_Ram.getSelectedIndex()==0){
                info.setText("No puede eliminar la raiz de la tabla.");
            } else if (ñl_Ram.getSelectedIndex()>0){

                if ("Guardar".equals(ñb_EditImp.getText())){ñb_EditImp.doClick();}
                //Borrar texto de las casillas

                ñt_NameF1.setText("");
                ñt_NameF2.setText("");

                ñt_AbbF1.setText("");
                ñt_AbbF2.setText("");

                ñt_DesF1.setText("");
                ñt_DesF2.setText("");

                // COSAS DE LA PESTAÑA RAMIFICATIONS
                // xTODOx (DONE): Filtro para no borrar aquellas disyunciones cuyas
                // conjunciones sean padres de otras ramificaciones, porque en
                // aquel caso aquellas disyunciones se quedarían huérfanas...
                // El usuario tendrá que primero borrar la referencia al padre
                // de aquella disyunción, porque si es permitido que hayan
                // ramificaciones flotando, pero no que se borre una que sirve
                // de soporte para otra.
                N.table.deleteRamification(N.table.getDisjunctions().
                    get(ñl_Ram.getSelectedIndex()));

                listModelRam.remove(ñl_Ram.getSelectedIndex());

                //Borra los textos de las demás casillas y de la lista de padres
                ñt_NameRam.setText("");
                ñt_AbbRam.setText("");

                ñt_NameCon1.setText("");
                ñt_NameCon2.setText("");
                ñt_NameCon3.setText("");

                ñt_AbbCon1.setText("");
                ñt_AbbCon2.setText("");
                ñt_AbbCon3.setText("");

                ñt_DesCon1.setText("");
                ñt_DesCon2.setText("");
                ñt_DesCon3.setText("");

                listModelRamParents.clear();
                info.setText("Ramificación eliminada.");

                // Actualizar la lista de Conjunciones
                listModelImp.clear();
                for (Disjunction d : N.table.getDisjunctions()){
                    listModelImp.addElement(N.table.getDisjName(d));
                }
            }
        }
    }//GEN-LAST:event_ñb_DeleteRamActionPerformed

    private void ñb_CloneRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_CloneRamActionPerformed
        if(ñl_Ram.isSelectionEmpty()){
            // Do nothing or there will be an exception
        } else if (!(ñl_Ram.isSelectionEmpty())){
            listModelRam.addElement(N.table.getDisjName(
                N.table.cloneRamification(N.table.getDisjunctions().get(ñl_Ram.getSelectedIndex()))
            ));
            //            Ñ.table.cloneRamification(Ñ.table.getDisjunctions().get(ñl_Ram.getSelectedIndex()));

        }
    }//GEN-LAST:event_ñb_CloneRamActionPerformed

    private void ñb_NewRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_NewRamActionPerformed
        if (!(N.isOpen())){
            info.setText("No se puede crear una nueva ramificación porque no "
                + "hay ningún documento abierto.");
        } else if (N.isOpen()){
            Disjunction d = N.table.createRamification();
            listModelRam.addElement(N.table.getDisjName(d));
            listModelImp.addElement(N.table.getDisjName(d));
        }
    }//GEN-LAST:event_ñb_NewRamActionPerformed

    private void ñb_NewRamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ñb_NewRamMouseClicked

    }//GEN-LAST:event_ñb_NewRamMouseClicked

    private void ñt_AbbRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñt_AbbRamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ñt_AbbRamActionPerformed

    private void ñl_RamValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ñl_RamValueChanged
        if (ñl_Ram.getValueIsAdjusting()){

        } else if (!(ñl_Ram.getValueIsAdjusting())) {
            // if index is -1, ignore! this function has been activated
            // by another one... else, do the magic!
            if (ñl_Ram.getSelectedIndex()==-1) {
                //
            } else if (ñl_Ram.getSelectedIndex() >= 0) {

                Disjunction d = N.table.getDisjunctions().
                get(ñl_Ram.getSelectedIndex());

                ñt_NameRam.setText(N.table.getDisjName(d));
                ñt_AbbRam.setText(N.table.getDisjAbb(d));

                // Names of three conjunctions of the disjunction d
                ñt_NameCon1.setText(N.table.getCon1Name(d));
                ñt_NameCon2.setText(N.table.getCon2Name(d));
                ñt_NameCon3.setText(N.table.getCon3Name(d));

                // Abbreviations of three conjunctions of the disjunction d
                ñt_AbbCon1.setText(N.table.getCon1Abb(d));
                ñt_AbbCon2.setText(N.table.getCon2Abb(d));
                ñt_AbbCon3.setText(N.table.getCon3Abb(d));

                // Descriptions of three conjunctions of the disjunction d
                ñt_DesCon1.setText(N.table.getCon1Des(d));
                ñt_DesCon2.setText(N.table.getCon2Des(d));
                ñt_DesCon3.setText(N.table.getCon3Des(d));

                //Actualizar la lista de las conjunciones padres
                listModelRamParents.clear();
                for (String s : N.table.getAllParentsNames(d)){
                    listModelRamParents.addElement(s);
                }
            }
        }
    }//GEN-LAST:event_ñl_RamValueChanged

    private void ñb_EditSysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñb_EditSysActionPerformed
        if (N.isOpen()) {
            if ("Editar".equals(ñb_EditSys.getText())){
                ñb_EditSys.setText("Guardar");

                //Sistema
                ñt_NameSys.setEditable(true);
                ñt_AbbSys.setEditable(true);
                ñt_DesSys.setEditable(true);
                ñt_Author.setEditable(true);
                N.setModified(true);

            } else if ("Guardar".equals(ñb_EditSys.getText())) {
                ñb_EditSys.setText("Editar");
                ñt_NameSys.setEditable(false);
                ñt_AbbSys.setEditable(false);
                ñt_DesSys.setEditable(false);
                ñt_Author.setEditable(false);

                N.table.setTableDate(LocalDate.now());
                ñt_Date.setText(N.table.getTableDate());

                N.table.setTableName(ñt_NameSys.getText());
                N.table.setTableAbb(ñt_AbbSys.getText());
                N.table.setTableDes(ñt_DesSys.getText());
                N.table.setTableAuthor(ñt_Author.getText());

            }
        } else if (!(N.isOpen())) {
            JOptionPane.showMessageDialog(rootPane, "No se ha cargado "
                + "ninguna Tabla de Deducciones y no hay nada que editar.\n"
                + "Porfavor crear o abrir un nuevo archivo desde el menú "
                + "Archivo.",
                "No hay nada que editar",
                JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_ñb_EditSysActionPerformed

    private void ñb_EditSysItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ñb_EditSysItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_ñb_EditSysItemStateChanged

    private void ñt_DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñt_DateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ñt_DateActionPerformed

    private void ñt_NameSysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ñt_NameSysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ñt_NameSysActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel info;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton ñb_CloneRam;
    private javax.swing.JButton ñb_DeleteRam;
    private javax.swing.JButton ñb_EditImp;
    private javax.swing.JButton ñb_EditRam;
    private javax.swing.JButton ñb_EditSys;
    private javax.swing.JButton ñb_FromRam;
    private javax.swing.JButton ñb_NewRam;
    private javax.swing.JFileChooser ñfc_Open;
    private javax.swing.JFileChooser ñfc_SaveAs;
    private javax.swing.JList<String> ñl_FromRam;
    protected static DefaultListModel<String> listModelRamParents;
    private javax.swing.JList<String> ñl_Imp;
    private DefaultListModel<String> listModelImp;
    static javax.swing.JList<String> ñl_Ram;
    private DefaultListModel<String>  listModelRam;
    private javax.swing.JMenuItem ñm_Exit;
    private javax.swing.JMenu ñm_File;
    private javax.swing.JMenuItem ñm_New;
    private javax.swing.JMenuItem ñm_Open;
    private javax.swing.JMenuItem ñm_Save;
    private javax.swing.JMenuItem ñm_SaveAs;
    private javax.swing.JTextField ñt_AbbCon1;
    private javax.swing.JTextField ñt_AbbCon2;
    private javax.swing.JTextField ñt_AbbCon3;
    private javax.swing.JTextField ñt_AbbF1;
    private javax.swing.JTextField ñt_AbbF2;
    private javax.swing.JTextField ñt_AbbRam;
    private javax.swing.JTextField ñt_AbbSys;
    private javax.swing.JTextField ñt_Author;
    private javax.swing.JFormattedTextField ñt_Date;
    private javax.swing.JTextArea ñt_DesCon1;
    private javax.swing.JTextArea ñt_DesCon2;
    private javax.swing.JTextArea ñt_DesCon3;
    private javax.swing.JTextArea ñt_DesF1;
    private javax.swing.JTextArea ñt_DesF2;
    private javax.swing.JTextArea ñt_DesSys;
    private javax.swing.JTextField ñt_NameCon1;
    private javax.swing.JTextField ñt_NameCon2;
    private javax.swing.JTextField ñt_NameCon3;
    private javax.swing.JTextField ñt_NameF1;
    private javax.swing.JTextField ñt_NameF2;
    private javax.swing.JTextField ñt_NameRam;
    private javax.swing.JTextField ñt_NameSys;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        // from https://www.youtube.com/watch?v=40ikcEonWng
        setIconImage(Toolkit.getDefaultToolkit().
                getImage(getClass().getResource("resources/icon_64.png")));
    }
}
